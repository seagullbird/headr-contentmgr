// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contentmgrsvc.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	contentmgrsvc.proto

It has these top-level messages:
	CreateNewPostRequest
	CreateNewPostReply
	DeletePostRequest
	DeletePostReply
	GetPostRequest
	GetPostReply
	GetAllPostsRequest
	GetAllPostsReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The new post request contains zero parameters.
type CreateNewPostRequest struct {
	Title   string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Summary string `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Tags    string `protobuf:"bytes,4,opt,name=tags" json:"tags,omitempty"`
	SiteId  uint64 `protobuf:"varint,5,opt,name=site_id,json=siteId" json:"site_id,omitempty"`
	Date    string `protobuf:"bytes,6,opt,name=date" json:"date,omitempty"`
}

func (m *CreateNewPostRequest) Reset()                    { *m = CreateNewPostRequest{} }
func (m *CreateNewPostRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateNewPostRequest) ProtoMessage()               {}
func (*CreateNewPostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateNewPostRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateNewPostRequest) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *CreateNewPostRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CreateNewPostRequest) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *CreateNewPostRequest) GetSiteId() uint64 {
	if m != nil {
		return m.SiteId
	}
	return 0
}

func (m *CreateNewPostRequest) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

// The new post response contains the result of the creation.
type CreateNewPostReply struct {
	Id  uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Err string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *CreateNewPostReply) Reset()                    { *m = CreateNewPostReply{} }
func (m *CreateNewPostReply) String() string            { return proto.CompactTextString(m) }
func (*CreateNewPostReply) ProtoMessage()               {}
func (*CreateNewPostReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateNewPostReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateNewPostReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type DeletePostRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePostRequest) Reset()                    { *m = DeletePostRequest{} }
func (m *DeletePostRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePostRequest) ProtoMessage()               {}
func (*DeletePostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeletePostRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeletePostReply struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *DeletePostReply) Reset()                    { *m = DeletePostReply{} }
func (m *DeletePostReply) String() string            { return proto.CompactTextString(m) }
func (*DeletePostReply) ProtoMessage()               {}
func (*DeletePostReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeletePostReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type GetPostRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetPostRequest) Reset()                    { *m = GetPostRequest{} }
func (m *GetPostRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPostRequest) ProtoMessage()               {}
func (*GetPostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetPostRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetPostReply struct {
	Title   string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Summary string `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Tags    string `protobuf:"bytes,4,opt,name=tags" json:"tags,omitempty"`
	SiteId  uint64 `protobuf:"varint,5,opt,name=site_id,json=siteId" json:"site_id,omitempty"`
	Date    string `protobuf:"bytes,6,opt,name=date" json:"date,omitempty"`
	Err     string `protobuf:"bytes,7,opt,name=err" json:"err,omitempty"`
}

func (m *GetPostReply) Reset()                    { *m = GetPostReply{} }
func (m *GetPostReply) String() string            { return proto.CompactTextString(m) }
func (*GetPostReply) ProtoMessage()               {}
func (*GetPostReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetPostReply) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetPostReply) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *GetPostReply) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *GetPostReply) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *GetPostReply) GetSiteId() uint64 {
	if m != nil {
		return m.SiteId
	}
	return 0
}

func (m *GetPostReply) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *GetPostReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type GetAllPostsRequest struct {
}

func (m *GetAllPostsRequest) Reset()                    { *m = GetAllPostsRequest{} }
func (m *GetAllPostsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllPostsRequest) ProtoMessage()               {}
func (*GetAllPostsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GetAllPostsReply struct {
	PostIds []uint64 `protobuf:"varint,1,rep,packed,name=post_ids,json=postIds" json:"post_ids,omitempty"`
	Err     string   `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *GetAllPostsReply) Reset()                    { *m = GetAllPostsReply{} }
func (m *GetAllPostsReply) String() string            { return proto.CompactTextString(m) }
func (*GetAllPostsReply) ProtoMessage()               {}
func (*GetAllPostsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetAllPostsReply) GetPostIds() []uint64 {
	if m != nil {
		return m.PostIds
	}
	return nil
}

func (m *GetAllPostsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateNewPostRequest)(nil), "pb.CreateNewPostRequest")
	proto.RegisterType((*CreateNewPostReply)(nil), "pb.CreateNewPostReply")
	proto.RegisterType((*DeletePostRequest)(nil), "pb.DeletePostRequest")
	proto.RegisterType((*DeletePostReply)(nil), "pb.DeletePostReply")
	proto.RegisterType((*GetPostRequest)(nil), "pb.GetPostRequest")
	proto.RegisterType((*GetPostReply)(nil), "pb.GetPostReply")
	proto.RegisterType((*GetAllPostsRequest)(nil), "pb.GetAllPostsRequest")
	proto.RegisterType((*GetAllPostsReply)(nil), "pb.GetAllPostsReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Contentmgr service

type ContentmgrClient interface {
	// Create a new post.
	NewPost(ctx context.Context, in *CreateNewPostRequest, opts ...grpc.CallOption) (*CreateNewPostReply, error)
	DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostReply, error)
	GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostReply, error)
	GetAllPosts(ctx context.Context, in *GetAllPostsRequest, opts ...grpc.CallOption) (*GetAllPostsReply, error)
}

type contentmgrClient struct {
	cc *grpc.ClientConn
}

func NewContentmgrClient(cc *grpc.ClientConn) ContentmgrClient {
	return &contentmgrClient{cc}
}

func (c *contentmgrClient) NewPost(ctx context.Context, in *CreateNewPostRequest, opts ...grpc.CallOption) (*CreateNewPostReply, error) {
	out := new(CreateNewPostReply)
	err := grpc.Invoke(ctx, "/pb.Contentmgr/NewPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentmgrClient) DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostReply, error) {
	out := new(DeletePostReply)
	err := grpc.Invoke(ctx, "/pb.Contentmgr/DeletePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentmgrClient) GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostReply, error) {
	out := new(GetPostReply)
	err := grpc.Invoke(ctx, "/pb.Contentmgr/GetPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentmgrClient) GetAllPosts(ctx context.Context, in *GetAllPostsRequest, opts ...grpc.CallOption) (*GetAllPostsReply, error) {
	out := new(GetAllPostsReply)
	err := grpc.Invoke(ctx, "/pb.Contentmgr/GetAllPosts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Contentmgr service

type ContentmgrServer interface {
	// Create a new post.
	NewPost(context.Context, *CreateNewPostRequest) (*CreateNewPostReply, error)
	DeletePost(context.Context, *DeletePostRequest) (*DeletePostReply, error)
	GetPost(context.Context, *GetPostRequest) (*GetPostReply, error)
	GetAllPosts(context.Context, *GetAllPostsRequest) (*GetAllPostsReply, error)
}

func RegisterContentmgrServer(s *grpc.Server, srv ContentmgrServer) {
	s.RegisterService(&_Contentmgr_serviceDesc, srv)
}

func _Contentmgr_NewPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNewPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentmgrServer).NewPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Contentmgr/NewPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentmgrServer).NewPost(ctx, req.(*CreateNewPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contentmgr_DeletePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentmgrServer).DeletePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Contentmgr/DeletePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentmgrServer).DeletePost(ctx, req.(*DeletePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contentmgr_GetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentmgrServer).GetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Contentmgr/GetPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentmgrServer).GetPost(ctx, req.(*GetPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contentmgr_GetAllPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentmgrServer).GetAllPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Contentmgr/GetAllPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentmgrServer).GetAllPosts(ctx, req.(*GetAllPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Contentmgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Contentmgr",
	HandlerType: (*ContentmgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewPost",
			Handler:    _Contentmgr_NewPost_Handler,
		},
		{
			MethodName: "DeletePost",
			Handler:    _Contentmgr_DeletePost_Handler,
		},
		{
			MethodName: "GetPost",
			Handler:    _Contentmgr_GetPost_Handler,
		},
		{
			MethodName: "GetAllPosts",
			Handler:    _Contentmgr_GetAllPosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "contentmgrsvc.proto",
}

func init() { proto.RegisterFile("contentmgrsvc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0xed, 0x1a, 0x83, 0xdb, 0x69, 0x45, 0xe9, 0xe0, 0xd2, 0xad, 0x4f, 0x96, 0xb9, 0x70, 0x42,
	0x6a, 0x2b, 0xf5, 0x10, 0x09, 0x45, 0x11, 0x91, 0x10, 0x97, 0x28, 0xf2, 0x1f, 0x40, 0x06, 0x8f,
	0x90, 0x25, 0x83, 0x1d, 0xef, 0x90, 0x88, 0x9f, 0x93, 0x73, 0x7e, 0x61, 0x6e, 0xd1, 0xda, 0xcb,
	0x97, 0x41, 0x39, 0xe7, 0x36, 0xf3, 0xe6, 0xcd, 0x78, 0xde, 0xbc, 0x35, 0x74, 0x17, 0xd9, 0x9a,
	0x69, 0xcd, 0xab, 0x65, 0xa1, 0x1e, 0x17, 0xc3, 0xbc, 0xc8, 0x38, 0x43, 0x2b, 0x9f, 0x07, 0xcf,
	0x02, 0xdc, 0x71, 0x41, 0x11, 0xd3, 0x1d, 0x3d, 0xdd, 0x67, 0x8a, 0x43, 0x7a, 0xd8, 0x90, 0x62,
	0x74, 0xa1, 0xc9, 0x09, 0xa7, 0x24, 0x85, 0x2f, 0x06, 0x5f, 0xc2, 0x2a, 0x41, 0x09, 0x8e, 0xda,
	0xac, 0x56, 0x51, 0xb1, 0x95, 0x56, 0x89, 0xef, 0x52, 0x5d, 0x31, 0xdf, 0x90, 0x8d, 0xaa, 0x62,
	0x52, 0x44, 0xb0, 0x39, 0x5a, 0x2a, 0x69, 0x97, 0x70, 0x19, 0xe3, 0x2f, 0x70, 0x54, 0xc2, 0x34,
	0x4b, 0x62, 0xd9, 0xf4, 0xc5, 0xc0, 0x0e, 0x5b, 0x3a, 0x9d, 0xc6, 0x9a, 0x1c, 0x47, 0x4c, 0xb2,
	0x55, 0x91, 0x75, 0x1c, 0xfc, 0x07, 0xac, 0xad, 0x98, 0xa7, 0x5b, 0x6c, 0x83, 0x95, 0xc4, 0xe5,
	0x76, 0x76, 0x68, 0x25, 0x31, 0x76, 0xa0, 0x41, 0x45, 0x61, 0xd6, 0xd2, 0x61, 0xd0, 0x87, 0x1f,
	0xb7, 0x94, 0x12, 0xd3, 0xb1, 0xae, 0x5a, 0x5b, 0xd0, 0x87, 0xef, 0xc7, 0x24, 0x3d, 0xd9, 0x4c,
	0x12, 0x87, 0x49, 0x3e, 0xb4, 0x27, 0xc4, 0xef, 0x8d, 0x79, 0x11, 0xf0, 0x6d, 0x4f, 0xd1, 0x43,
	0x3e, 0xce, 0xfd, 0x76, 0x7a, 0x9c, 0x83, 0x1e, 0x17, 0x70, 0x42, 0x7c, 0x93, 0xa6, 0x7a, 0x5f,
	0x65, 0x34, 0x05, 0xd7, 0xd0, 0x39, 0x41, 0xb5, 0x8c, 0xdf, 0xf0, 0x39, 0xcf, 0x14, 0xcf, 0x92,
	0x58, 0x49, 0xe1, 0x37, 0x06, 0x76, 0xe8, 0xe8, 0x7c, 0x1a, 0xab, 0xf3, 0x83, 0xff, 0x7d, 0x15,
	0x00, 0xe3, 0xfd, 0x43, 0xc3, 0x11, 0x38, 0xc6, 0x31, 0x94, 0xc3, 0x7c, 0x3e, 0xbc, 0xf4, 0xce,
	0xbc, 0xde, 0x85, 0x4a, 0x9e, 0x6e, 0x83, 0x4f, 0x78, 0x05, 0x70, 0x70, 0x06, 0x7f, 0x6a, 0xde,
	0x99, 0x9d, 0x5e, 0xb7, 0x0e, 0x57, 0xbd, 0x7f, 0xc0, 0x31, 0x6e, 0x20, 0x6a, 0xc6, 0xa9, 0x7b,
	0x5e, 0xe7, 0x04, 0xab, 0x5a, 0x46, 0xf0, 0xf5, 0x48, 0x3d, 0xf6, 0x0c, 0xa5, 0x76, 0x24, 0xcf,
	0x3d, 0xc3, 0xcb, 0xf6, 0x79, 0xab, 0xfc, 0xa7, 0xfe, 0xbd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x62,
	0x51, 0x18, 0x27, 0x6a, 0x03, 0x00, 0x00,
}
